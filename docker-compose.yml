version: "3.8"

networks:
  gastronomy-network:
    driver: bridge

volumes:
  mongo-vol: {}
  mongodb-config-vol: {}
  mongo-vol-test: {}
  mongodb-config-test-vol: {}

services:
  nextjs:
    build:
      context: ./client
      dockerfile: Dockerfile
    command: yarn dev
    ports:
      - "3001:3001"
    depends_on:
      - node-api
      - mongodb
      - mongodb-test
    networks:
      - gastronomy-network
    volumes:
      - ./client:/app
    environment:
      - NODE_ENV=${AMBIENT}
      - NEXT_PUBLIC_URL=${NEXT_PUBLIC_URL}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - EMAIL_TOKEN_SECRET=${EMAIL_TOKEN_SECRET}

  node-api:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - mongodb
      - mongodb-test
    networks:
      - gastronomy-network
    command: yarn dev
    volumes:
      - ./server:/app

  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27018:27017"
    volumes:
      - mongo-vol:/data/db
      - mongodb-config-vol:/data/configdb
    networks:
      - gastronomy-network

  mongodb-test:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME_TEST}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD_TEST}
    ports:
      - "27019:27017"
    volumes:
      - mongo-vol-test:/data/db
      - mongodb-config-test-vol:/data/configdb
    networks:
      - gastronomy-network
