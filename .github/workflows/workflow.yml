name: CI Workflow

on:
  push:
    branches:
      - main
      - develops
  pull_request:
    branches:
      - main
      - develops

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval 15s 
          --health-timeout 15s 
          --health-retries 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js for Server
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Create .env file
        working-directory: ./server
        run: |
          cat <<EOF > .env
          AMBIENT=${{ secrets.AMBIENT }}
          PORT=${{ secrets.PORT }}
          MONGO_TEST_URI=${{ secrets.MONGO_TEST_URI }}
          ACCESS_TOKEN_MAX_AGE=${{ secrets.ACCESS_TOKEN_MAX_AGE }}
          REFRESH_TOKEN_MAX_AGE=${{ secrets.REFRESH_TOKEN_MAX_AGE }}
          EMAIL_TOKEN_MAX_AGE=${{ secrets.EMAIL_TOKEN_MAX_AGE }}
          HTTP_ONLY=${{ secrets.HTTP_ONLY }}
          EMAIL_ADMIN=${{ secrets.EMAIL_ADMIN }}
          EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GHUB_CLIENT_ID=${{ secrets.GHUB_CLIENT_ID }}
          GHUB_CLIENT_SECRET=${{ secrets.GHUB_CLIENT_SECRET }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          TEST_TOKEN=${{ secrets.TEST_TOKEN }}
          ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
          EMAIL_TOKEN_SECRET=${{ secrets.EMAIL_TOKEN_SECRET }}
          EOF

      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..10}; do
            if nc -z localhost 27017; then
              echo "MongoDB is ready";
              break;
            fi;
            echo "Waiting for MongoDB...";
            sleep 3;
          done

      - name: Install dependencies for Server
        working-directory: ./server
        run: yarn install

      - name: Run tests for Server
        working-directory: ./server
        run: yarn test
