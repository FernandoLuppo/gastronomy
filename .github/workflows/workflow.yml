name: Docker Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27018:27017
        volumes:
          - mongo-vol:/data/db

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Create .env file
        run: |
          cat <<EOF > .env
          AMBIENT=${{ secrets.AMBIENT }}
          NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}
          NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          PORT=${{ secrets.PORT }}
          MONGO_DEV_URI=${{ secrets.MONGO_DEV_URI }}
          ACCESS_TOKEN_MAX_AGE=${{ secrets.ACCESS_TOKEN_MAX_AGE }}
          REFRESH_TOKEN_MAX_AGE=${{ secrets.REFRESH_TOKEN_MAX_AGE }}
          EMAIL_TOKEN_MAX_AGE=${{ secrets.EMAIL_TOKEN_MAX_AGE }}
          HTTP_ONLY=${{ secrets.HTTP_ONLY }}
          EMAIL_ADMIN=${{ secrets.EMAIL_ADMIN }}
          EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GHUB_CLIENT_ID=${{ secrets.GHUB_CLIENT_ID }}
          GHUB_CLIENT_SECRET=${{ secrets.GHUB_CLIENT_SECRET }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          MONGO_TEST_URI=${{ secrets.MONGO_TEST_URI }}
          TEST_TOKEN=${{ secrets.TEST_TOKEN }}
          ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
          EMAIL_TOKEN_SECRET=${{ secrets.EMAIL_TOKEN_SECRET }}
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Start Docker containers
        run: docker-compose up -d

      - name: Copy .env to Docker container
        run: |
          docker cp .env nextjs:/app/.env
          docker cp .env node-api:/app/.env

      - name: Install dependencies in Next.js container
        run: |
          docker-compose exec nextjs sh -c "yarn install"

      - name: Install dependencies in Node.js API container
        run: |
          docker-compose exec node-api sh -c "yarn install"

      - name: Run tests in Next.js container
        run: |
          docker-compose exec nextjs sh -c "yarn test"

      - name: Run tests in Node.js API container
        run: |
          docker-compose exec node-api sh -c "yarn test"
