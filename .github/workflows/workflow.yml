name: CI Pipeline

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

env:
  AMBIENT: ${{ secrets.AMBIENT }}
  NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
  PORT: ${{ secrets.PORT }}
  MONGO_DEV_URI: ${{ secrets.MONGO_DEV_URI }}
  ACCESS_TOKEN_MAX_AGE: ${{ secrets.ACCESS_TOKEN_MAX_AGE }}
  REFRESH_TOKEN_MAX_AGE: ${{ secrets.REFRESH_TOKEN_MAX_AGE }}
  EMAIL_TOKEN_MAX_AGE: ${{ secrets.EMAIL_TOKEN_MAX_AGE }}
  HTTP_ONLY: ${{ secrets.HTTP_ONLY }}
  EMAIL_ADMIN: ${{ secrets.EMAIL_ADMIN }}
  EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  GHUB_CLIENT_ID: ${{ secrets.GHUB_CLIENT_ID }}
  GHUB_CLIENT_SECRET: ${{ secrets.GHUB_CLIENT_SECRET }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  MONGO_TEST_URI: ${{ secrets.MONGO_TEST_URI }}
  TEST_TOKEN: ${{ secrets.TEST_TOKEN }}
  ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
  REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
  EMAIL_TOKEN_SECRET: ${{ secrets.EMAIL_TOKEN_SECRET }}

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          cat <<EOF > .env
          AMBIENT=${{ secrets.AMBIENT }}
          NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}
          NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          PORT=${{ secrets.PORT }}
          MONGO_DEV_URI=${{ secrets.MONGO_DEV_URI }}
          ACCESS_TOKEN_MAX_AGE=${{ secrets.ACCESS_TOKEN_MAX_AGE }}
          REFRESH_TOKEN_MAX_AGE=${{ secrets.REFRESH_TOKEN_MAX_AGE }}
          EMAIL_TOKEN_MAX_AGE=${{ secrets.EMAIL_TOKEN_MAX_AGE }}
          HTTP_ONLY=${{ secrets.HTTP_ONLY }}
          EMAIL_ADMIN=${{ secrets.EMAIL_ADMIN }}
          EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GHUB_CLIENT_ID=${{ secrets.GHUB_CLIENT_ID }}
          GHUB_CLIENT_SECRET=${{ secrets.GHUB_CLIENT_SECRET }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          MONGO_TEST_URI=${{ secrets.MONGO_TEST_URI }}
          TEST_TOKEN=${{ secrets.TEST_TOKEN }}
          ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
          EMAIL_TOKEN_SECRET=${{ secrets.EMAIL_TOKEN_SECRET }}
          EOF

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Start Services with Docker compose
        run: docker-compose up -d

      - name: Wait for Services to be Ready
        run: sleep 15

  test-server:
    name: Test Server
    runs-on: ubuntu-22.04
    needs: setup

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Debug Working Directory
        run: ls -al

      - name: Run Server Tests Inside Container
        run: |
          docker-compose exec server sh -c "
          yarn install &&
          yarn test
          "

  build-client:
    name: Build Client
    runs-on: ubuntu-22.04
    needs: setup

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Debug Working Directory
        run: ls -al

      - name: Run Server Tests Inside Container
        run: |
          docker-compose exec server sh -c "
          yarn install &&
          yarn build
          "

  cleanup:
    name: Cleanup Docker
    runs-on: ubuntu-22.04
    needs: [test-server, build-client]

    steps:
      - name: Stop Docker Compose
        run: docker-compose down
